{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Settings } from \"./Settings\";\nimport { Home } from \"./Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport var Layout = function Layout(props) {\n  var _React$useState = React.useState({\n    offset: 0,\n    limit: 151\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      setting = _React$useState2[0],\n      setSetting = _React$useState2[1];\n\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName = route.name.toLowerCase();\n          return _jsx(MaterialIcons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#006989',\n        tabBarInactiveTintColor: '#BBBBBB'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      children: function children(props) {\n        return _jsx(Home, _objectSpread(_objectSpread({}, props), {}, {\n          setting: setting,\n          setSetting: setSetting\n        }));\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      children: function children(props) {\n        return _jsx(Settings, _objectSpread(_objectSpread({}, props), {}, {\n          setSetting: setSetting\n        }));\n      }\n    })]\n  });\n};","map":{"version":3,"sources":["/home/lenovo/workspace/socialNetwork/mobile/components/Views/Pokemons/Layout.js"],"names":["React","MaterialIcons","createBottomTabNavigator","Settings","Home","Tab","Layout","props","useState","offset","limit","setting","setSetting","route","tabBarIcon","focused","color","size","iconName","name","toLowerCase","tabBarActiveTintColor","tabBarInactiveTintColor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,QAAT;AACA,SAASC,IAAT;;;AAEA,IAAMC,GAAG,GAAGH,wBAAwB,EAApC;AAEA,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAE7B,wBAA8BP,KAAK,CAACQ,QAAN,CAAe;AAACC,IAAAA,MAAM,EAAE,CAAT;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,SACI,MAAC,GAAD,CAAK,SAAL;AACI,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACtC,cAAIC,QAAQ,GAAIL,KAAK,CAACM,IAAP,CAAaC,WAAb,EAAf;AACA,iBAAO,KAAC,aAAD;AAAe,YAAA,IAAI,EAAEF,QAArB;AAA+B,YAAA,IAAI,EAAED,IAArC;AAA2C,YAAA,KAAK,EAAED;AAAlD,YAAP;AACH,SAJ0B;AAK3BK,QAAAA,qBAAqB,EAAE,SALI;AAM3BC,QAAAA,uBAAuB,EAAE;AANE,OAAhB;AAAA,KADnB;AAAA,eASI,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAA,gBAAyB,kBAAAf,KAAK;AAAA,eAAI,KAAC,IAAD,kCAAUA,KAAV;AAAiB,UAAA,OAAO,EAAEI,OAA1B;AAAmC,UAAA,UAAU,EAAEC;AAA/C,WAAJ;AAAA;AAA9B,MATJ,EAUI,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,UAAjB;AAAA,gBAA6B,kBAAAL,KAAK;AAAA,eAAI,KAAC,QAAD,kCAAcA,KAAd;AAAqB,UAAA,UAAU,EAAEK;AAAjC,WAAJ;AAAA;AAAlC,MAVJ;AAAA,IADJ;AAcH,CAlBM","sourcesContent":["import React from 'react';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Settings } from './Settings';\nimport { Home } from './Home';\n\nconst Tab = createBottomTabNavigator();\n\nexport const Layout = (props) => {\n\n    const [setting, setSetting] = React.useState({offset: 0, limit: 151})\n\n    return (\n        <Tab.Navigator\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName = (route.name).toLowerCase();\n                    return <MaterialIcons name={iconName} size={size} color={color} />;\n                },\n                tabBarActiveTintColor: '#006989',\n                tabBarInactiveTintColor: '#BBBBBB',\n            })}>\n            <Tab.Screen name='Home'>{props => <Home {...props} setting={setting} setSetting={setSetting} />}</Tab.Screen>\n            <Tab.Screen name='Settings'>{props => <Settings {...props} setSetting={setSetting} />}</Tab.Screen>\n        </Tab.Navigator>\n    );\n}"]},"metadata":{},"sourceType":"module"}