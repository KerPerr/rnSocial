{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useForm, Controller } from 'react-hook-form';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Guard } from \"./Guard\";\nimport { styles } from \"../../Style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Login = function Login(props) {\n  React.useEffect(function () {\n    (function _callee2() {\n      var uid, jwt;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('uid'));\n\n            case 2:\n              uid = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('jwt'));\n\n            case 5:\n              jwt = _context2.sent;\n              fetch('http://localhost:5000/authenticated', {\n                method: 'GET',\n                headers: {\n                  uid: uid,\n                  Cookie: \"access_token=\" + jwt\n                },\n                credentials: 'include'\n              }).then(function _callee(res) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!res.ok) {\n                          _context.next = 8;\n                          break;\n                        }\n\n                        _context.t0 = setMe;\n                        _context.next = 4;\n                        return _regeneratorRuntime.awrap(res.json());\n\n                      case 4:\n                        _context.t1 = _context.sent;\n                        (0, _context.t0)(_context.t1);\n                        Guard.authenticated = true;\n                        navigation.navigate('Base');\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var setMe = props.setMe,\n      navigation = props.navigation;\n\n  var _useForm = useForm({\n    defaultValues: {\n      username: '',\n      password: ''\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onSubmit = function onSubmit(data) {\n    return _regeneratorRuntime.async(function onSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = setMe;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Guard.login(data.username, data.password));\n\n          case 3:\n            _context3.t1 = _context3.sent;\n            (0, _context3.t0)(_context3.t1);\n\n            if (Guard.isAuthenticated()) {\n              navigation.navigate('Base');\n            }\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 24\n      },\n      children: \"Please sign in\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref) {\n        var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value,\n          placeholder: \"Username\"\n        });\n      },\n      name: \"username\"\n    }), errors.username && _jsx(Text, {\n      children: \"Username is required.\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            onBlur = _ref2$field.onBlur,\n            value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value,\n          secureTextEntry: true,\n          placeholder: \"Password\"\n        });\n      },\n      name: \"password\"\n    }), errors.password && _jsx(Text, {\n      children: \"Password is required.\"\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleSubmit(onSubmit)\n    })]\n  });\n};","map":{"version":3,"sources":["/home/lenovo/workspace/socialNetwork/mobile/components/Authentication/Login.js"],"names":["React","AsyncStorage","useForm","Controller","Guard","styles","Login","props","useEffect","getItem","uid","jwt","fetch","method","headers","Cookie","credentials","then","res","ok","setMe","json","authenticated","navigation","navigate","catch","err","console","log","defaultValues","username","password","control","handleSubmit","errors","formState","onSubmit","data","login","isAuthenticated","container","fontWeight","fontSize","required","field","onChange","onBlur","value","input"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { Button, Text, TextInput, View } from 'react-native';\nimport { Guard } from './Guard';\nimport { styles } from '../../Style';\n\nexport const Login = (props) => {\n\n    React.useEffect(() => {\n        (async() => {\n            const uid = await AsyncStorage.getItem('uid')\n            const jwt = await AsyncStorage.getItem('jwt')\n            // console.log('jwt', jwt)\n\n            fetch('http://localhost:5000/authenticated', {\n                method: 'GET',\n                headers: { uid: uid, Cookie: `access_token=${jwt}` },\n                credentials: 'include'\n            }).then(async (res) => {\n                if (res.ok) {\n                    setMe(await res.json())\n                    Guard.authenticated = true\n                    navigation.navigate('Base')\n                }\n            }).catch(err => console.log(err))\n        })()\n    }, [])\n\n    const { setMe, navigation } = props\n\n    const { control, handleSubmit, formState: { errors } } = useForm({\n        defaultValues: {\n            username: '',\n            password: ''\n        }\n    })\n\n    const onSubmit = async (data) => {\n        setMe(await Guard.login(data.username, data.password))\n        if (Guard.isAuthenticated()) {\n            navigation.navigate('Base')\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={{ fontWeight: \"bold\", fontSize: 24 }}>Please sign in</Text>\n\n            <Controller control={control} rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                    <TextInput style={styles.input} onBlur={onBlur} onChangeText={onChange} value={value} placeholder=\"Username\" />\n                )}\n                name=\"username\"\n            />\n            {errors.username && <Text>Username is required.</Text>}\n\n            <Controller control={control} rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                    <TextInput style={styles.input} onBlur={onBlur} onChangeText={onChange} value={value} secureTextEntry={true} placeholder=\"Password\" />\n                )}\n                name=\"password\"\n            />\n            {errors.password && <Text>Password is required.</Text>}\n\n            <Button title='Submit' onPress={handleSubmit(onSubmit)} />\n        </View>\n    )\n}"]},"metadata":{},"sourceType":"module"}