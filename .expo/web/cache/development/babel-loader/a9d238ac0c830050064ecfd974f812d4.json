{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { styles } from \"../../Style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var Wall = function Wall(_ref) {\n  var navigation = _ref.navigation,\n      me = _ref.me;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      news = _React$useState2[0],\n      setNews = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visible = _React$useState4[0],\n      setVisible = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      input = _React$useState6[0],\n      setInput = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      enable = _React$useState8[0],\n      setEnable = _React$useState8[1];\n\n  var handleInput = function handleInput(text) {\n    text.length > 0 ? setEnable(false) : setEnable(true);\n    setInput(text);\n    console.log(input);\n  };\n\n  React.useEffect(function () {\n    (function _callee() {\n      var uid, jwt;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('uid'));\n\n            case 2:\n              uid = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('jwt'));\n\n            case 5:\n              jwt = _context.sent;\n              fetch('http://localhost:5000/posts', {\n                method: 'GET',\n                headers: {\n                  uid: uid,\n                  Cookie: \"access_token=\" + jwt\n                },\n                credentials: 'include'\n              }).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                return setNews(data);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(MaterialIcons, {\n          name: 'chat',\n          size: 24,\n          color: '#555',\n          style: {\n            marginEnd: 20\n          },\n          onPress: function onPress() {\n            return setVisible(true);\n          }\n        });\n      }\n    });\n  }, [navigation]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(FlatList, {\n      data: news,\n      keyExtractor: function keyExtractor(item, index) {\n        return index;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsx(News, {\n          item: item,\n          navigation: navigation,\n          visible: visible,\n          setVisible: setVisible\n        }, index);\n      }\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: visible,\n      children: _jsxs(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#D8D8D8'\n        },\n        children: [_jsxs(View, {\n          style: {\n            backgroundColor: '#FFF',\n            height: 64,\n            borderColor: '#D8D8D8',\n            borderWidth: 1,\n            flexDirection: 'row',\n            padding: 10\n          },\n          children: [_jsxs(View, {\n            style: {\n              flex: 0.5,\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            children: [_jsx(MaterialIcons, {\n              style: {\n                justifyContent: 'center'\n              },\n              name: 'close',\n              size: 36,\n              color: '#555',\n              onPress: function onPress() {\n                return setVisible(false);\n              }\n            }), _jsx(Text, {\n              style: {\n                fontSize: 16,\n                fontWeight: 'bold',\n                marginLeft: 5\n              },\n              children: \"Partager\"\n            })]\n          }), _jsx(View, {\n            style: {\n              flex: 0.5,\n              justifyContent: 'center',\n              alignItems: 'flex-end'\n            },\n            children: _jsx(Button, {\n              title: \"Publier\",\n              disabled: enable,\n              onPress: function onPress() {\n                return console.log('PRESS');\n              }\n            })\n          })]\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: {\n              margin: 10,\n              padding: 5,\n              backgroundColor: 'white'\n            },\n            value: input,\n            multiline: true,\n            numberOfLines: 4,\n            onChangeText: function onChangeText(text) {\n              return handleInput(text);\n            }\n          })\n        })]\n      })\n    })]\n  });\n};\n\nvar News = function News(_ref3) {\n  var item = _ref3.item;\n  return _jsxs(View, {\n    style: styles.card,\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.cardHeader,\n        children: item.title\n      })\n    }), _jsx(Text, {\n      style: styles.cardContent,\n      children: item.content\n    }), _jsx(Text, {\n      style: styles.cardAuthor,\n      children: item.owner.username\n    })]\n  });\n};\n\nvar sheet = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'transparent'\n  },\n  text: {\n    fontWeight: 'bold',\n    lineHeight: 21,\n    color: 'black',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/home/lenovo/workspace/socialNetwork/mobile/components/Views/Wall.js"],"names":["React","MaterialIcons","AsyncStorage","styles","Wall","navigation","me","useState","news","setNews","visible","setVisible","input","setInput","enable","setEnable","handleInput","text","length","console","log","useEffect","getItem","uid","jwt","fetch","method","headers","Cookie","credentials","then","res","json","data","catch","err","useLayoutEffect","setOptions","headerRight","marginEnd","item","index","flex","backgroundColor","height","borderColor","borderWidth","flexDirection","padding","alignItems","justifyContent","fontSize","fontWeight","marginLeft","margin","News","card","cardHeader","title","cardContent","content","cardAuthor","owner","username","sheet","StyleSheet","create","button","paddingVertical","paddingHorizontal","borderRadius","elevation","lineHeight","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StyleSheet, FlatList, Text, View, Modal, Button, Pressable, TextInput } from 'react-native';\nimport { styles } from '../../Style';\n\nexport const Wall = ({ navigation, me }) => {\n\n    const [news, setNews] = React.useState([])\n    const [visible, setVisible] = React.useState(false);\n\n    const [input, setInput] = React.useState('')\n    const [enable, setEnable] = React.useState(true)\n\n    const handleInput = (text) => {\n        text.length > 0 ? setEnable(false) : setEnable(true)\n        setInput(text)\n        console.log(input)\n    }\n\n    React.useEffect(() => {\n        (async () => {\n            const uid = await AsyncStorage.getItem('uid')\n            const jwt = await AsyncStorage.getItem('jwt')\n\n            fetch('http://localhost:5000/posts', {\n                method: 'GET',\n                headers: {\n                    uid: uid,\n                    Cookie: `access_token=${jwt}`\n                },\n                credentials: 'include'\n            })\n                .then(res => res.json())\n                .then(data => setNews(data))\n                .catch(err => console.log(err))\n        })()\n    }, [])\n\n    React.useLayoutEffect(() => {\n        navigation.setOptions({\n            headerRight: () => (\n                <MaterialIcons name={'chat'} size={24} color={'#555'}\n                    style={{ marginEnd: 20 }}\n                    onPress={() => setVisible(true)}\n                />\n            ),\n        });\n    }, [navigation]);\n\n    return (\n        <>\n            <FlatList data={news} keyExtractor={(item, index) => index}\n                renderItem={({ item, index }) => (\n                    <News key={index} item={item} navigation={navigation} visible={visible} setVisible={setVisible} />\n                )}\n            />\n\n            <Modal animationType={\"slide\"} transparent={true} visible={visible}>\n                <View style={{ flex: 1, backgroundColor: '#D8D8D8' }}>\n                    <View style={{ backgroundColor: '#FFF', height: 64, borderColor: '#D8D8D8', borderWidth: 1, flexDirection: 'row', padding: 10 }}>\n                        <View style={{ flex: 0.5, flexDirection: 'row', alignItems: 'center' }}>\n                            <MaterialIcons style={{ justifyContent: 'center' }} name={'close'} size={36} color={'#555'} onPress={() => setVisible(false)} />\n                            <Text style={{ fontSize: 16, fontWeight: 'bold', marginLeft: 5 }}>Partager</Text>\n                        </View>\n                        <View style={{ flex: 0.5, justifyContent: 'center', alignItems: 'flex-end' }}>\n                            <Button title='Publier' disabled={enable} onPress={() => console.log('PRESS')} />\n                        </View>\n                    </View>\n                    <View>\n                        <TextInput\n                            style={{ margin: 10, padding: 5, backgroundColor: 'white' }}\n                            value={input}\n                            multiline={true}\n                            numberOfLines={4}\n                            onChangeText={text => handleInput(text)}\n                        />\n                    </View>\n                </View>\n            </Modal>\n        </>\n    )\n}\n\nconst News = ({ item }) => {\n\n    return (\n        <View style={styles.card}>\n            <View>\n                <Text style={styles.cardHeader}>{item.title}</Text>\n            </View>\n            <Text style={styles.cardContent}>{item.content}</Text>\n            <Text style={styles.cardAuthor}>{item.owner.username}</Text>\n        </View>\n    )\n}\n\nconst sheet = StyleSheet.create({\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        backgroundColor: 'transparent',\n    },\n    text: {\n        fontWeight: 'bold',\n        lineHeight: 21,\n        color: 'black',\n        fontSize: 16,\n    },\n});"]},"metadata":{},"sourceType":"module"}