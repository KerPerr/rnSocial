{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout } from \"./components/Views/Pokemons/Layout\";\nimport { Detail } from \"./components/Views/Pokemons/Detail\";\nimport { Login } from \"./components/Authentication/Login\";\nimport { Base } from \"./components/Views/Base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      me = _React$useState2[0],\n      setMe = _React$useState2[1];\n\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        children: function children(props) {\n          return _jsx(Login, _objectSpread(_objectSpread({}, props), {}, {\n            setMe: setMe\n          }));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Base\",\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(Base, _objectSpread(_objectSpread({}, props), {}, {\n            me: me\n          }));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Layout\",\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(Layout, _objectSpread(_objectSpread({}, props), {}, {\n            me: me\n          }));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Detail\",\n        component: Detail,\n        options: function options(_ref) {\n          var route = _ref.route;\n          return {\n            title: route.params.item.name[0].toUpperCase() + route.params.item.name.substring(1),\n            headerTitleStyle: {\n              fontWeight: 'bold'\n            }\n          };\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/home/lenovo/workspace/socialNetwork/mobile/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","Layout","Detail","Login","Base","Stack","App","useState","me","setMe","props","headerShown","route","title","params","item","name","toUpperCase","substring","headerTitleStyle","fontWeight"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,SAASC,MAAT;AACA,SAASC,MAAT;AACA,SAASC,KAAT;AACA,SAASC,IAAT;;;AAEA,IAAMC,KAAK,GAAGL,0BAA0B,EAAxC;AAEA,eAAe,SAASM,GAAT,GAAe;AAE7B,wBAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAApB;AAAA;AAAA,MAAOC,EAAP;AAAA,MAAWC,KAAX;;AAEA,SACC,KAAC,mBAAD;AAAA,cACC,MAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,OAAlC;AAAA,iBACC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAAA,kBAA4B,kBAAAC,KAAK;AAAA,iBAAI,KAAC,KAAD,kCAAWA,KAAX;AAAkB,YAAA,KAAK,EAAED;AAAzB,aAAJ;AAAA;AAAjC,QADD,EAEC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,OAAO,EAAE;AAAEE,UAAAA,WAAW,EAAE;AAAf,SAAnC;AAAA,kBAA4D,kBAAAD,KAAK;AAAA,iBAAI,KAAC,IAAD,kCAAUA,KAAV;AAAiB,YAAA,EAAE,EAAEF;AAArB,aAAJ;AAAA;AAAjE,QAFD,EAGC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,OAAO,EAAE;AAAEG,UAAAA,WAAW,EAAE;AAAf,SAArC;AAAA,kBAA8D,kBAAAD,KAAK;AAAA,iBAAI,KAAC,MAAD,kCAAYA,KAAZ;AAAmB,YAAA,EAAE,EAAEF;AAAvB,aAAJ;AAAA;AAAnE,QAHD,EAIC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAEN,MAAvC;AAA+C,QAAA,OAAO,EAAE;AAAA,cAAGU,KAAH,QAAGA,KAAH;AAAA,iBAAgB;AACvEC,YAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,IAAlB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CL,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,IAAlB,CAAuBE,SAAvB,CAAiC,CAAjC,CADsB;AAEvEC,YAAAA,gBAAgB,EAAE;AACjBC,cAAAA,UAAU,EAAE;AADK;AAFqD,WAAhB;AAAA;AAAxD,QAJD;AAAA;AADD,IADD;AAeA","sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport { Layout } from './components/Views/Pokemons/Layout'\nimport { Detail } from './components/Views/Pokemons/Detail'\nimport { Login } from './components/Authentication/Login';\nimport { Base } from './components/Views/Base';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\n\tconst [me, setMe] = React.useState({})\n\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Stack.Navigator initialRouteName=\"Login\">\n\t\t\t\t<Stack.Screen name=\"Login\">{props => <Login {...props} setMe={setMe} />}</Stack.Screen>\n\t\t\t\t<Stack.Screen name=\"Base\" options={{ headerShown: false }}>{props => <Base {...props} me={me} />}</Stack.Screen>\n\t\t\t\t<Stack.Screen name=\"Layout\" options={{ headerShown: false }}>{props => <Layout {...props} me={me} />}</Stack.Screen>\n\t\t\t\t<Stack.Screen name=\"Detail\" component={Detail} options={({ route }) => ({\n\t\t\t\t\ttitle: route.params.item.name[0].toUpperCase() + route.params.item.name.substring(1),\n\t\t\t\t\theaderTitleStyle: {\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t}\n\t\t\t\t})} />\n\t\t\t</Stack.Navigator>\n\t\t</NavigationContainer>\n\t)\n}"]},"metadata":{},"sourceType":"module"}